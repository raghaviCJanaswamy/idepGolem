# name: Build Windows (Electron)
# on:
#   push:
#     branches: [ gitac ]            # change if your default branch is different
#     paths:
#       - 'electron/**'
#       - '.github/workflows/build-win.yml'
#   workflow_dispatch:              # allow manual runs from the Actions tab

# jobs:
#   build-win:
#     runs-on: windows-latest
#     defaults:
#       run:
#         working-directory: electron   # your electron/ subfolder

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Setup Node
#         uses: actions/setup-node@v4
#         with:
#           node-version: 20
#           # cache: npm
#           # cache-dependency-path: electron/package-lock.json

#       # Install R and stage a portable runtime under electron/resources/R.win
#       - name: Install R (Chocolatey)
#         shell: powershell
#         run: choco install -y r

#       - name: Stage R.win runtime for packaging
#         shell: powershell
#         run: |
#           $r = Get-ChildItem "C:\Program Files\R" -Directory |
#                Sort-Object Name -Descending | Select-Object -First 1
#           if (-not $r) { throw "R not found under C:\Program Files\R" }
#           Write-Host "Using R from: $($r.FullName)"

#           New-Item -ItemType Directory -Force resources\R.win | Out-Null
#           Copy-Item -Path "$($r.FullName)\*" -Destination resources\R.win -Recurse

#           # sanity check
#           if (-not (Test-Path "resources\R.win\bin\x64\Rscript.exe") -and
#               -not (Test-Path "resources\R.win\bin\Rscript.exe")) {
#             throw "Rscript.exe not found in resources\R.win"
#           }

#       - name: Install Node dependencies
#         shell: pwsh
#         run: |
#           if (Test-Path package-lock.json) {
#             npm ci
#           } else {
#             echo "No package-lock.json found; using npm install"
#             npm install
#           }

#       # Build Windows artifacts (uses your electron/build config)
#       - name: Build (electron-builder --win)
#         shell: pwsh
#         env:
#           # avoid accidental signing prompts
#           CSC_IDENTITY_AUTO_DISCOVERY: "false"
#         run: npx electron-builder --win

#       # Upload everything under electron/dist/
#       - name: Upload dist artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: win-dist
#           path: electron/dist/**
