name: build-linux

on:
  workflow_dispatch:
  push:
    branches: ["gitac"]       
  pull_request:
    paths:
      - "electron/**"
      - ".github/workflows/build-linux.yml"

concurrency:
  group: build-linux-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux:
    name: linux x64
    runs-on: ubuntu-latest

    env:
      PROJECT_DIR: electron
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Useful packaging tools (rpm for .rpm, fakeroot helpful for .deb)
      - name: Install packaging prerequisites
        run: |
          sudo apt-get update -y
          sudo apt-get install -y rpm fakeroot

      - name: Install deps (no lockfile)
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          npm config set fund false
          npm install --no-audit --no-fund

      # Ensure electron/ has a .git so electron-builder can read repo info
      - name: Ensure git metadata for electron-builder
        working-directory: ${{ env.PROJECT_DIR }}
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -d ".git" ]; then
            git init
            git remote add origin "https://github.com/${{ github.repository }}.git"
            git config user.email "actions@users.noreply.github.com"
            git config user.name  "github-actions[bot]"
          fi
          git config --get remote.origin.url || true

      # Force unsigned build: clear any possible signing env
      - name: Force unsigned env (Linux)
        shell: bash
        run: |
          unset CSC_LINK CSC_KEY_PASSWORD WIN_CSC_LINK APPLE_ID APPLE_APP_SPECIFIC_PASSWORD APPLE_TEAM_ID
          export CSC_IDENTITY_AUTO_DISCOVERY=false

      - name: Build (Linux)
        working-directory: ${{ env.PROJECT_DIR }}
        shell: bash
        run: |
          set -euo pipefail
          if npm run -s dist:linux --if-present; then
            :
          else
            npx electron-builder --linux --publish=never
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-dist
          path: |
            ${{ env.PROJECT_DIR }}/dist/**/*.AppImage
            ${{ env.PROJECT_DIR }}/dist/**/*.deb
            ${{ env.PROJECT_DIR }}/dist/**/*.rpm
            ${{ env.PROJECT_DIR }}/dist/**/*.zip
            ${{ env.PROJECT_DIR }}/dist/*.yml
            ${{ env.PROJECT_DIR }}/dist/*.blockmap
          if-no-files-found: warn
